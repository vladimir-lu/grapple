package org.halfway.grapple.gui;

import com.google.common.base.Joiner;
import com.google.common.collect.ImmutableList;
import org.halfway.grapple.model.GrappleFatalException;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Logger;

public class BacktraceWindow extends JFrame {
    private static final Logger logger = Logger.getLogger(BacktraceWindow.class.getSimpleName());

    private final boolean realExit;

    private JPanel mainPanel;
    private JTextArea backtraceTextArea;
    private JButton exitButton;
    private JLabel errorExplanation;

    public BacktraceWindow(final boolean realExit) {
        super("Fatal Error");
        this.realExit = realExit;
        addCloseListeners();
        setContentPane(mainPanel);
        setExtendedState(getExtendedState() | Frame.MAXIMIZED_BOTH);
    }

    public void setScrollbackWithExplanation(final String explanation, final ImmutableList<String> scrollback) {
        errorExplanation.setText(explanation);
        backtraceTextArea.setText(Joiner.on("\n").join(scrollback));
        backtraceTextArea.setCaretPosition(0);
    }

    private void addCloseListeners() {
        exitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                exitButtonClicked();
            }
        });
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                BacktraceWindow.this.windowClosed();
            }
        });
    }

    private void exitButtonClicked() {
        logger.info("Exit button clicked, exiting");
        exit();
    }

    private void windowClosed() {
        logger.info("Window closed, exiting");
        exit();
    }

    private void exit() {
        if (realExit) {
            System.exit(255);
        } else {
            throw new GrappleFatalException("exit");
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 2));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, BorderLayout.CENTER);
        backtraceTextArea = new JTextArea();
        backtraceTextArea.setEditable(false);
        backtraceTextArea.setEnabled(true);
        backtraceTextArea.setLineWrap(true);
        scrollPane1.setViewportView(backtraceTextArea);
        exitButton = new JButton();
        exitButton.setText("Exit");
        mainPanel.add(exitButton, BorderLayout.SOUTH);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 4));
        mainPanel.add(panel1, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        label1.setText("Unfortunately the application could not launch due to the error below:");
        panel1.add(label1, BorderLayout.NORTH);
        errorExplanation = new JLabel();
        errorExplanation.setFont(new Font(errorExplanation.getFont().getName(), Font.BOLD, errorExplanation.getFont().getSize()));
        errorExplanation.setText("");
        panel1.add(errorExplanation, BorderLayout.WEST);
        label1.setLabelFor(backtraceTextArea);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
